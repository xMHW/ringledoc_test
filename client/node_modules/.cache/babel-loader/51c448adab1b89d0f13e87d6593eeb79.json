{"ast":null,"code":"var _jsxFileName = \"/Users/hwmin414/coledit/client/src/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://localhost:5000\";\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor() {\n  _s();\n\n  useEffect(() => {\n    const socket = io(SOCKET_URL);\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TextEditor, \"EQ/EB5VUit9zp5sqhMcbxagvlro=\");\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/hwmin414/coledit/client/src/TextEditor.js"],"names":["useCallback","useEffect","Quill","io","SOCKET_URL","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","TextEditor","socket","disconnect","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","theme","modules","toolbar"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,UAAU,GAAG,uBAAnB;AAEA,MAAMC,eAAe,GAAG,CACpB,CAAC;AAAEC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;AAAV,CAAD,CADoB,EAEpB,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAD,CAFoB,EAGpB,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAD,EAAsB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAtB,CAHoB,EAIpB,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,CAJoB,EAKpB,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,EAAgB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAhB,CALoB,EAMpB,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAD,EAAoB;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAApB,CANoB,EAOpB,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,CAPoB,EAQpB,CAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,CARoB,EASpB,CAAC,OAAD,CAToB,CAAxB;AAYA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjCZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,MAAM,GAAGX,EAAE,CAACC,UAAD,CAAjB;AAEA,WAAO,MAAM;AACTU,MAAAA,MAAM,CAACC,UAAP;AACH,KAFD;AAGH,GANQ,EAMP,EANO,CAAT;AAOA,QAAMC,UAAU,GAAGhB,WAAW,CAACiB,OAAO,IAAI;AACtC,QAAGA,OAAO,IAAI,IAAd,EAAoB;AACpBA,IAAAA,OAAO,CAACC,SAAR,GAAoB,EAApB;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAJ,IAAAA,OAAO,CAACK,MAAR,CAAeH,MAAf;AACA,QAAIjB,KAAJ,CAAUiB,MAAV,EAAkB;AAAEI,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAEpB;AAAX;AAA1B,KAAlB;AACH,GAN6B,EAM3B,EAN2B,CAA9B;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEW;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAhBuBH,U;;KAAAA,U","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\"\nimport { io } from 'socket.io-client'\n\nconst SOCKET_URL = \"http://localhost:5000\"\n\nconst TOOLBAR_OPTIONS = [\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ font: [] }],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"bold\", \"italic\", \"underline\"],\n    [{ color: [] }, { background: [] }],\n    [{ script: \"sub\" }, { script: \"super\" }],\n    [{ align: [] }],\n    [\"image\", \"blockquote\", \"code-block\"],\n    [\"clean\"],\n]\n\nexport default function TextEditor() {\n    useEffect(() => {\n        const socket = io(SOCKET_URL);\n\n        return () => {\n            socket.disconnect();\n        }\n    },[])\n    const wrapperRef = useCallback(wrapper => {\n        if(wrapper == null) return\n        wrapper.innerHTML = \"\";\n        const editor = document.createElement(\"div\");\n        wrapper.append(editor)\n        new Quill(editor, { theme: \"snow\", modules: { toolbar: TOOLBAR_OPTIONS }, })\n    }, [])\n    return <div className=\"container\" ref={wrapperRef}></div>\n}"]},"metadata":{},"sourceType":"module"}