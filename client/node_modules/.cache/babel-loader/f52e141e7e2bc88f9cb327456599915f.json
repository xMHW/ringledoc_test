{"ast":null,"code":"var _jsxFileName = \"/Users/minseong/ringledoc_test/client/src/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom';\nimport QuillCursors from 'quill-cursors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://localhost:5000\";\nconst CURSOR_LATENCY = 100;\nconst COLORS = ['red']; //442dc9\n//ff3051\n\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]];\nconst SAVE_INTERVAL = 3000;\nexport default function TextEditor() {\n  _s();\n\n  Quill.register('modules/cursors', QuillCursors);\n  const {\n    userId\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  const [docId, setDocId] = useState(1);\n  const [cursors, setCursors] = useState();\n  console.log(userId);\n  useEffect(() => {\n    const s = io(SOCKET_URL);\n    setSocket(s);\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once(\"load-document\", doc => {\n      quill.setContents(doc);\n      quill.enable();\n    });\n    socket.emit('get-document', docId);\n  }, [socket, quill, docId]); // useEffect(() => {\n  //     if(cursors == null) return;\n  //     // if(cursors.CreateCursor(userId.toString(), \"mike\", 'blue'));\n  // },[cursors])\n\n  const updateCursor = (source, range) => {\n    setTimeout(() => cursors.moveCursor(source, range), CURSOR_LATENCY);\n  };\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== 'user') return;\n      socket.emit(\"send-changes\", delta);\n    };\n\n    const cursorHandler = (range, oldRange, source) => {\n      // if (source !== userId.toString()) return;\n      socket.emit(\"send-cursor-changes\", {\n        range: range,\n        id: userId\n      });\n    };\n\n    quill.on('text-change', handler);\n    quill.on('selection-change', cursorHandler);\n    return () => {\n      quill.off('text-change', handler);\n      quill.off('selection-change', cursorHandler);\n    };\n  }, [socket, quill]); // useEffect(() => {\n  //     if (socket == null || quill == null) return;\n  //     const handler = (range, oldRange, source) => {\n  //         if (source !== 'user') return;\n  //         socket.emit(\"send-cursor-changes\", {range: range, source: source});\n  //     };\n  //     quill.on('selection-change', handler);\n  //     return () => {\n  //         quill.off('selection-change', handler);\n  //     }\n  // }, [socket, quill])\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    const cursorHandler = cursormap => {\n      Object.keys(cursormap).forEach(source => {\n        cursors.createCursor(source, 'mike', 'skyblue');\n        updateCursor(source, cursormap[source]);\n        console.log('---');\n        console.log(source);\n        console.log(cursormap);\n      });\n    };\n\n    socket.on('receive-changes', handler);\n    socket.on('receive-cursor-changes', cursorHandler);\n    return () => {\n      socket.off('receive-changes', handler);\n      socket.off('receive-cursor-changes', cursorHandler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const interval = setInterval(() => {\n      socket.emit(\"save-document\", quill.getContents());\n    }, SAVE_INTERVAL);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        cursors: {\n          hideDelayMs: 5000,\n          hideSpeedMs: 0,\n          selectionChangeSource: null,\n          transformOnTextChange: true\n        },\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    const cq = q.getModule('cursors'); // cq.createCursor('1','mike','skyblue');\n\n    q.disable();\n    q.setText(\"Wait a moment pls...\");\n    setQuill(q);\n    setCursors(cq);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 16\n  }, this);\n} // cursors: true,\n// template: '<div class=\"custom-cursor\">...</div>',\n\n_s(TextEditor, \"zmElJrvcJ22mrFnubd5Ag4Vnifw=\", false, function () {\n  return [useParams];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/minseong/ringledoc_test/client/src/TextEditor.js"],"names":["useCallback","useEffect","useState","Quill","io","useParams","QuillCursors","SOCKET_URL","CURSOR_LATENCY","COLORS","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","SAVE_INTERVAL","TextEditor","register","userId","socket","setSocket","quill","setQuill","docId","setDocId","cursors","setCursors","console","log","s","disconnect","once","doc","setContents","enable","emit","updateCursor","source","range","setTimeout","moveCursor","handler","delta","oldDelta","cursorHandler","oldRange","id","on","off","updateContents","cursormap","Object","keys","forEach","createCursor","interval","setInterval","getContents","clearInterval","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","theme","modules","hideDelayMs","hideSpeedMs","selectionChangeSource","transformOnTextChange","toolbar","cq","getModule","disable","setText"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom';\nimport QuillCursors from 'quill-cursors';\n\n\nconst SOCKET_URL = \"http://localhost:5000\"\n\nconst CURSOR_LATENCY = 100;\n\nconst COLORS = ['red']\n\n//442dc9\n//ff3051\n\nconst TOOLBAR_OPTIONS = [\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ font: [] }],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"bold\", \"italic\", \"underline\"],\n    [{ color: [] }, { background: [] }],\n    [{ script: \"sub\" }, { script: \"super\" }],\n    [{ align: [] }],\n    [\"image\", \"blockquote\", \"code-block\"],\n    [\"clean\"],\n]\n\nconst SAVE_INTERVAL = 3000;\n\nexport default function TextEditor() {\n    Quill.register('modules/cursors', QuillCursors);\n    const { userId } = useParams();\n    const [socket, setSocket] = useState();\n    const [quill, setQuill] = useState();\n    const [docId, setDocId] = useState(1);\n    const [cursors, setCursors] = useState();\n    console.log(userId);\n\n\n    useEffect(() => {\n        const s = io(SOCKET_URL);\n        setSocket(s);\n\n        return () => {\n            socket.disconnect();\n        }\n    },[])\n\n    useEffect(() => {\n        if (socket == null || quill == null) return;\n        socket.once(\"load-document\", doc => {\n             quill.setContents(doc);\n             quill.enable();\n        });\n\n        socket.emit('get-document', docId);\n    }, [socket, quill, docId])\n\n    // useEffect(() => {\n    //     if(cursors == null) return;\n    //     // if(cursors.CreateCursor(userId.toString(), \"mike\", 'blue'));\n    // },[cursors])\n\n    const updateCursor = (source, range) => {\n        setTimeout(() => cursors.moveCursor(source, range), CURSOR_LATENCY);\n    }\n\n    useEffect(() => {\n        if (socket == null || quill == null) return;\n        const handler = (delta, oldDelta, source) => {\n            if (source !== 'user') return;\n            socket.emit(\"send-changes\", delta);\n        };\n        const cursorHandler = (range, oldRange, source) => {\n            // if (source !== userId.toString()) return;\n            socket.emit(\"send-cursor-changes\", {range: range, id: userId});\n        }\n\n        quill.on('text-change', handler);\n        quill.on('selection-change', cursorHandler);\n\n        return () => {\n            quill.off('text-change', handler);\n            quill.off('selection-change', cursorHandler);\n        }\n    }, [socket, quill])\n\n    // useEffect(() => {\n    //     if (socket == null || quill == null) return;\n    //     const handler = (range, oldRange, source) => {\n    //         if (source !== 'user') return;\n    //         socket.emit(\"send-cursor-changes\", {range: range, source: source});\n    //     };\n    //     quill.on('selection-change', handler);\n\n    //     return () => {\n    //         quill.off('selection-change', handler);\n    //     }\n    // }, [socket, quill])\n\n    useEffect(() => {\n        if (socket == null || quill == null) return;\n        const handler = (delta) => {\n            quill.updateContents(delta);\n        };\n        const cursorHandler = (cursormap) => {\n            Object.keys(cursormap).forEach(source => {\n                cursors.createCursor(source, 'mike', 'skyblue');\n                updateCursor(source, cursormap[source]);\n                console.log('---')\n                console.log(source);\n                console.log(cursormap)\n            });\n        };\n        socket.on('receive-changes', handler);\n        socket.on('receive-cursor-changes', cursorHandler);\n\n        return () => {\n            socket.off('receive-changes', handler);\n            socket.off('receive-cursor-changes', cursorHandler);\n        }\n    }, [socket, quill])\n    \n    useEffect(() => {\n        if (socket == null || quill == null) return;\n        \n        const interval = setInterval(() => {\n            socket.emit(\"save-document\", quill.getContents());\n        }, SAVE_INTERVAL);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, [socket, quill])\n    \n    const wrapperRef = useCallback(wrapper => {\n        if(wrapper == null) return\n        wrapper.innerHTML = \"\";\n        const editor = document.createElement(\"div\");\n        wrapper.append(editor)\n        const q = new Quill(editor, { theme: \"snow\", modules: {\n            cursors: {\n                hideDelayMs: 5000,\n                hideSpeedMs: 0,\n                selectionChangeSource: null,\n                transformOnTextChange: true,\n            }, \n            toolbar: TOOLBAR_OPTIONS }, });\n            const cq = q.getModule('cursors');\n            // cq.createCursor('1','mike','skyblue');\n            q.disable();\n            q.setText(\"Wait a moment pls...\");\n            setQuill(q);\n            setCursors(cq);\n        }, [])\n        return <div className=\"container\" ref={wrapperRef}></div>\n    }\n    \n    // cursors: true,\n    // template: '<div class=\"custom-cursor\">...</div>',"]},"metadata":{},"sourceType":"module"}